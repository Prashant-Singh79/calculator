{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","show","setShow","value","e","target","reset","percent","data","Number","backspace","ans","toString","slice","length","equals","eval","className","onClick","reactDOM","render","document","getElementById"],"mappings":"64BAGe,SAASA,MAEtB,cAA0BC,oDAAS,IAAnC,qJAAOC,MAAP,cAAcC,SAAd,cACA,WAAwBF,oDAAS,IAAjC,sJAAOG,KAAP,cAAaC,QAAb,cAEMC,MAAM,SAACC,GAEXF,QAAQD,KAAK,GAAGG,EAAEC,OAAOF,OACzBH,SAASD,MAAQ,GAAIK,EAAEC,OAAOF,QAI5BG,MAAM,WACVN,SAAS,IACTE,QAAQ,KAIJK,QAAQ,SAACH,GACb,IAAII,EAAKC,OAAOV,OAAO,IACvBC,SAASQ,IAILE,UAAU,WACd,IAAIC,EAAIZ,MAAMa,WACdV,QAAQS,EAAIE,MAAM,EAAEd,MAAMe,OAAO,IACjCd,SAASW,EAAIE,MAAM,EAAEd,MAAMe,OAAO,KAI9BC,OAAO,SAAPA,SAEJf,SAASgB,KAAKjB,SAKd,OAEE,kEAAKkB,UAAU,YAAf,SAEE,mEAAKA,UAAU,UAAf,UAEA,mEAAKA,UAAU,SAAf,UACA,kEAAKA,UAAU,QAAf,SACGhB,OAEAF,SAEC,qEAAQkB,UAAU,iBAAiBC,QAASZ,MAA5C,gBAGA,qEAAQW,UAAU,iBAAiBd,MAAM,IAAIe,QAASX,QAAtD,eAGA,qEAAQU,UAAU,iBAAiBC,QAASR,UAA5C,eAGA,qEAAQO,UAAU,aAAad,MAAM,IAAIe,QAASf,MAAlD,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,aAAad,MAAM,IAAIe,QAASf,MAAlD,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,aAAad,MAAM,IAAIe,QAASf,MAAlD,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,aAAad,MAAM,IAAIe,QAASf,MAAlD,eAGA,qEAAQc,UAAU,WAAWd,MAAM,IAAIe,QAASf,MAAhD,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASf,MAA3C,eAGA,qEAAQc,UAAU,MAAMd,MAAM,IAAIe,QAASH,OAA3C,sB,+BC3GV,yCAIAI,IAASC,OACL,cAAC,IAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0bafddb1.chunk.js","sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport \"./index.css\"\r\nexport default function App() {\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  const value=(e)=>{\r\n    \r\n    setShow(show+\"\"+e.target.value)\r\n    setInput(input + \"\" +e.target.value);\r\n\r\n  }\r\n\r\nconst reset=()=>{\r\n  setInput(\"\");\r\n  setShow(\"\");\r\n\r\n}\r\n\r\nconst percent=(e)=>{\r\n  let data=Number(input)/100\r\n  setInput(data);\r\n\r\n}\r\n\r\nconst backspace=()=>{\r\n  let ans=input.toString();\r\n  setShow(ans.slice(0,input.length-1))\r\n  setInput(ans.slice(0,input.length-1))\r\n}\r\n\r\n\r\nconst equals=()=>{\r\n\r\n  setInput(eval(input))\r\n\r\n}\r\n\r\n\r\n  return (\r\n  \r\n    <div className=\"container\">\r\n      \r\n      <div className=\"wrapper\">\r\n  \r\n      <div className=\"screen\">\r\n      <div className=\"small\">\r\n        {show}\r\n        </div>\r\n        {input}\r\n        </div>\r\n          <button className=\"btn light-gray\" onClick={reset}>\r\n            AC\r\n          </button>\r\n          <button className=\"btn light-gray\" value=\"%\" onClick={percent}>\r\n            %\r\n          </button>\r\n          <button className=\"btn light-gray\" onClick={backspace}>\r\n           C\r\n          </button>\r\n          <button className=\"btn orange\" value=\"/\" onClick={value}>\r\n            /\r\n          </button>\r\n          <button className=\"btn\" value=\"7\" onClick={value}>\r\n            7\r\n          </button>\r\n          <button className=\"btn\" value=\"8\" onClick={value}>\r\n            8\r\n          </button>\r\n          <button className=\"btn\" value=\"9\" onClick={value}>\r\n            9\r\n          </button>\r\n          <button className=\"btn orange\" value=\"*\" onClick={value}>\r\n            X\r\n          </button>\r\n          <button className=\"btn\" value=\"4\" onClick={value}>\r\n            4\r\n          </button>\r\n          <button className=\"btn\" value=\"5\" onClick={value}>\r\n            5\r\n          </button>\r\n          <button className=\"btn\" value=\"6\" onClick={value}>\r\n            6\r\n          </button>\r\n          <button className=\"btn orange\" value=\"+\" onClick={value}>\r\n            +\r\n          </button>\r\n          <button className=\"btn\" value=\"1\" onClick={value}>\r\n            1\r\n          </button>\r\n          <button className=\"btn\" value=\"2\" onClick={value}>\r\n            2\r\n          </button>\r\n          <button className=\"btn\" value=\"3\" onClick={value}>\r\n            3\r\n          </button>\r\n          <button className=\"btn orange\" value=\"-\" onClick={value}>\r\n            -\r\n          </button>\r\n          <button className=\"btn zero\" value=\"0\" onClick={value}>\r\n            0\r\n          </button>\r\n          <button className=\"btn\" value=\".\" onClick={value}>\r\n            .\r\n          </button>\r\n          <button className=\"btn\" value=\"=\" onClick={equals}>\r\n            =\r\n          </button>\r\n        </div>\r\n  \r\n    </div>\r\n \r\n  );\r\n}\r\n","import reactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nreactDOM.render(\r\n    <App/>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}